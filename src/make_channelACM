#=======================================================================
# Makefile example --Zheng Gong, 2020-03-04(yy/mm/dd)
#=======================================================================
CMP            =  gcc_MPI#intel_MPI #intel_serial #gcc_serial
exeName        =  channelACM
CFD_DEFS_Add   =
ACM_DEFS_Add   =#-DObliqueWallTest -DRotateOnly -DJiaYan -DChanBraunJFM2011
CFDACM_DEFS_Add=#-DIBMDistribute2 -DSeveralSphereInfo -DChanBraunJFM2011 -DTest_IBM_MPI

# ============================  CFDACM  ============================
# Choose pre-processing options
#   -DDOUBLE_PREC  - use double-precision
#   -DSAVE_SINGLE  - Save 3D data in single-precision
#   -DChanBraunJFM2011 - Test the work of Chan-Braun et al., J.Fluid Mech. (2011), vol.684,pp.441-474
# CFDACM options

CFD_dir     =  ./CFD_2nd/
Commdir     =  ./Common/
ACM_dir     =  ./DEM/
CFDACM_dir  =  ./CFDACM/
CommDEFS    = -DCompiled_With_MPI -DVectorOperator -DSAVE_SINGLE

CFD_DEFS    = -DCFDACM #-DSaveNode 
ACM_DEFS    = -DCFDACM
CFDACM_DEFS =#-DIBMDistribute2
CFD_DEFS   += $(CFD_DEFS_Add)
ACM_DEFS   += $(ACM_DEFS_Add)
CFDACM_DEFS+= $(CFDACM_DEFS_Add)

CFD_inc    = -I./ThirdParty/fftw/
CFD_lib    = -L./ThirdParty/fftw/ -lfftw3 -lm

# CFDACM source files
SrcT   := m_Decomp2d.f90 m_TypeDef.f90 m_Timer.f90 m_LogInfo.f90
Commsrc:= $(addprefix $(Commdir), ${SrcT})

SrcT   := m_Parameters.f90 m_Variables.f90 m_MeshAndMetries.f90 m_BC_and_Halo.f90 m_Tools.f90 m_TScheme.f90   \
          m_FlowType_Channel.f90 m_FlowType_TGVortex.f90 m_FlowType_AddedNew.f90 m_FlowCase.f90 m_Poisson.f90 \
          m_IOAndVisu.f90 m_ChannelSystem.f90
CFD_src:= $(addprefix $(CFD_dir), ${SrcT})

SrcT   := Prtcl_Parameters.f90 Prtcl_Decomp_2d.f90 Prtcl_EqualSphere.f90 Prtcl_Property.f90 Prtcl_Geometry.f90 \
          Prtcl_Variables.f90 Prtcl_CL_and_CF.f90 Prtcl_ContactSearchPW.f90 ACM_Integration.f90 Prtcl_Comm.f90 \
          Prtcl_IOAndVisu.f90 Prtcl_NBS_Munjiza.f90 Prtcl_Hrchl_Munjiza.f90 Prtcl_ContactSearch.f90 \
          Prtcl_DumpPrtcl.f90 ACM_System.f90
ACM_src:= $(addprefix $(ACM_dir), ${SrcT})

SrcT   := ca_BC_and_Halo.f90 ca_IBM.f90 ca_IBM_implicit.f90 ca_Statistics.f90 ca_System.f90 ca_main.f90
CA_src := $(addprefix $(CFDACM_dir), ${SrcT})

#-----------------------------------------------------------------------
# Normally no need to change anything below
#-----------------------------------------------------------------------
ifeq ($(CMP),intel_MPI)
  FortC = mpiifort
  CFLAG = -fpp -O3 -mcmodel=large -fp-model fast=2#-ipo -xSSE4.2 -axAVX,CORE-AVX-I,CORE-AVX2
else ifeq ($(CMP),intel_serial)
  FortC = ifort
  CFLAG = -fpp -O3 -mcmodel=large -fp-model fast=2#-ipo -xSSE4.2 -axAVX,CORE-AVX-I,CORE-AVX2
else ifeq ($(CMP),gcc_MPI)
  FortC = mpif90
  CFLAG = -cpp -O3 -Warray-bounds -fbacktrace -g -ffree-line-length-none -mcmodel=large -funroll-loops -floop-optimize
else ifeq ($(CMP),gcc_serial) 
  FortC = gfortran
  CFLAG = -cpp -O3 -Warray-bounds -fbacktrace -g -ffree-line-length-none -mcmodel=large -funroll-loops -floop-optimize
endif

all: $(exeName)
Commobj   = $(Commsrc:%.f90=%.o)
CFD_obj   = $(CFD_src:%.f90=%.o)
ACM_obj   = $(ACM_src:%.f90=%.o)
CFDACM_obj= $(CA_src:%.f90=%.o)
$(exeName):$(Commobj) $(CFD_obj) $(ACM_obj) $(CFDACM_obj)
	         $(FortC) $(CFLAG) -o $@ $(Commobj) $(CFD_obj) $(ACM_obj) $(CFDACM_obj) $(CFD_lib)
$(Commobj):$(Commdir)%.o :$(Commdir)%.f90
	         $(FortC) $(CFLAG) $(CommDEFS) -c $<
	         @ mv $(@F) ${Commdir}
$(CFD_obj):%.o :%.f90
	         $(FortC) $(CFLAG) $(CFD_inc) $(CFD_DEFS) -c $<
	         @ mv $(@F) ${CFD_dir}
$(ACM_obj):%.o :%.f90
	         $(FortC) $(CFLAG) $(ACM_DEFS) -c $<
	         @ mv $(@F) ${ACM_dir}
$(CFDACM_obj):%.o :%.f90
	         $(FortC) $(CFLAG) $(CFDACM_DEFS) -c $<
	         @ mv $(@F) ${CFDACM_dir}

.PHONY: clean
clean:
	rm -fr *.o *.mod $(exeName) $(CFD_dir)*.o $(Commdir)*.o $(ACM_dir)*.o $(CFDACM_dir)*.o
